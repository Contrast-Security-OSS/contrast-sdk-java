name: Release to Maven Central from Branch

# This workflow is meant to be run on a release branch. We manually perform the verison update and checks, and make the git tag that release:perform works on. Do not run this on main

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

jobs:
  check-branch:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Fail if on main branch
        run: |
          echo "Error: This workflow cannot be run on main, it should only be run on a release candidate branch"
          exit 1

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 11
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: 11
          distribution: temurin

      - name: Cache Maven Wrapper
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: cd maven-plugin/ && ./.mvn/wrapper/maven-wrapper.jar
          key: ${{ runner.os }}-maven-wrapper-${{ hashFiles('./.mvn/wrapper/maven-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-maven-wrapper

      - name: Cache Maven Repository
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-repository-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-repository

      # See https://github.com/actions/checkout/issues/13
      - name: Configure Git User
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      # Creates git tag for the given release candidate for release:perform
      - name: Create Git tag
        run: |
          git tag -a contrast-maven-plugin-${{ inputs.version }} -m "Release candidate ${{ inputs.version }}"
          git push origin contrast-maven-plugin-${{ inputs.version }}


      - name: Maven Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          cd maven-plugin/ && ./mvnw --batch-mode release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN 



