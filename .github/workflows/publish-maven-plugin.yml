name: publish-maven-plugin

on:
  workflow_dispatch:

jobs:
  check-branch:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Fail if on main branch
        run: |
          echo "Error: This workflow must be run on a release branch"
          exit 1

  publish:
    permissions:
      contents: write
    environment: Maven Central
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 11
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: 11
          distribution: temurin

      - name: Cache Maven Wrapper
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: cd maven-plugin/ && ./.mvn/wrapper/maven-wrapper.jar
          key: ${{ runner.os }}-maven-wrapper-${{ hashFiles('./.mvn/wrapper/maven-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-maven-wrapper

      - name: Cache Maven Repository
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-repository-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-repository

      # See https://github.com/actions/checkout/issues/13
      - name: Configure Git User
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'


      # Manually import gpg key so we don't have to deal with environment variable ambiguity.
      - name: Import GPG Key 
        run: |
          rm -rf $HOME/.gnupg/
          echo "$CONTRAST_GPG_PRIVATE_KEY" | base64 --decode > private-key.asc
          echo "$MAVEN_GPG_PASSPHRASE" | gpg2 --batch --passphrase-fd 0 --pinentry-mode loopback --import private-key.asc
          rm -f private-key.asc
        env:
          CONTRAST_GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          

      - name: Maven Release (dry-run)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          cd maven-plugin/ && ./mvnw -DdryRun=true --batch-mode release:prepare release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN


      - name: Maven Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          cd maven-plugin/ && ./mvnw --settings release-settings.xml --batch-mode release:prepare release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN

      # Remove gpg keys so they're never reused between runs without being reimported
      - name: Cleanup GPG Key
        if: always()
        run: |
           rm -rf $HOME/.gnupg/
